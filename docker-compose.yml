version: '2'
services:

# INPUT
  input-zookeeper:
    # image: wurstmeister/zookeeper
    image: zookeeper:3.5.5
    ports:
      - "2181:2181"

  input-cluster:
    image: wurstmeister/kafka:2.12-2.2.1
    depends_on:
      - input-zookeeper
    ports:
      - "9092:9092"
    environment:
      # KAFKA_ADVERTISED_HOST_NAME: 172.17.0.1
      KAFKA_LISTENERS: PLAINTEXT://:9092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://172.17.0.1:9092
      KAFKA_CREATE_TOPICS: "test:1:1"
      KAFKA_ZOOKEEPER_CONNECT: input-zookeeper:2181
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  input-schema-registry:
    image: confluentinc/cp-schema-registry
    depends_on:
      - input-zookeeper
      - input-cluster
    ports:
      - "8081:8081"
    environment:
      SCHEMA_REGISTRY_HOST_NAME: input-schema-registry
      SCHEMA_REGISTRY_KAFKASTORE_CONNECTION_URL: 'input-zookeeper:2181'
      SCHEMA_REGISTRY_SCHEMA_REGISTRY_ZK_NAMESPACE: 'input-schema-registry'


# OUTPUT
  output-zookeeper:
    # image: wurstmeister/zookeeper
    image: zookeeper:3.5.5
    ports:
      - "2182:2181"

  output-cluster:
    image: wurstmeister/kafka:2.12-2.2.1
    depends_on:
      - output-zookeeper
    ports:
      - "9093:9092"
    environment:
      # KAFKA_ADVERTISED_HOST_NAME: 172.17.0.1
      KAFKA_LISTENERS: PLAINTEXT://:9092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://172.17.0.1:9093
      KAFKA_ZOOKEEPER_CONNECT: output-zookeeper:2181
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  output-schema-registry:
    image: confluentinc/cp-schema-registry
    depends_on:
      - output-zookeeper
      - output-cluster
    ports:
      - "8082:8081"
    environment:
      SCHEMA_REGISTRY_HOST_NAME: output-schema-registry
      SCHEMA_REGISTRY_KAFKASTORE_CONNECTION_URL: 'output-zookeeper:2181'
      SCHEMA_REGISTRY_SCHEMA_REGISTRY_ZK_NAMESPACE: 'output-schema-registry'
